package work;

public class sodoku{
	public static void main(String[] args) {
        int[][] sudoku = {
                {5,3,4,6,7,8,9,1,2},
                {6,7,2,1,9,5,3,4,8},
                {1,9,8,3,4,2,5,6,7},
                {8,5,9,7,6,1,4,2,3},
                {4,2,6,8,5,3,7,9,1},
                {7,1,3,9,2,4,8,5,6},
                {9,6,1,5,3,7,2,8,4},
                {2,8,7,4,1, 9,6,3,5},
                {3,4,5,2,8,6,1,7,9}
        };

        if (isValidSudoku(sudoku)) {
            System.out.println("This is a valid sudoku");
        } else {
            System.out.println("This is not a valid sudoku");
        }
    }

    public static boolean isValidSudoku(int[][] board) {
        // Check rows
        for (int i = 0; i < 9; i++) {
            boolean[] rowCheck = new boolean[9];
            for (int j = 0; j < 9; j++) {
                int num = board[i][j];
                if (num != 0) {
                    if (rowCheck[num-1]) {
                        return false;
                    }
                    rowCheck[num-1] = true;
                }
            }
        }

        // Check columns
        for (int j = 0; j < 9; j++) {
            boolean[] colCheck = new boolean[9];
            for (int i = 0; i < 9; i++) {
                int num = board[i][j];
                if (num != 0) {
                    if (colCheck[num-1]) {
                        return false;
                    }
                    colCheck[num-1] = true;
                }
            }
        }

        // Check 3x3 boxes
        for (int i = 0; i < 9; i += 3) {
            for (int j = 0; j < 9; j += 3) {
                boolean[] boxCheck = new boolean[9];
                for (int k = 0; k < 9; k++) {
                    int row = i + k / 3;
                    int col = j + k % 3;
                    int num = board[row][col];
                    if (num != 0) {
                        if (boxCheck[num-1]) {
                            return false;
                        }
                        boxCheck[num-1] = true;
                    }
                }
            }
        }

        return true;
    }


}
